;;Bienvenue dans ce test !
(defun factorielle (n)
  (cond
   ((<= n 0) 1)
   (t (* n (factorielle (- n 1))))
   )
  )
(if (= (factorielle 3) 6) (print "SUCCÈS de factorielle\n") (print "ÉCHEC de factorielle\n"))
(defun aux (vider remplir)
  (if (null vider) 
      remplir
    (
     (let premier (first vider))
     (let (nouveau_vider (rest vider))
       (nouveau_remplir (cons premier remplir))
       )
     (aux nouveau_vider nouveau_remplir)
     )
    )
  )
(defun revertir (liste)
  (aux liste '()))
(defun aux (x) (* x x))
(defun map (fonction liste)
  (defun aux (liste)
    (if (null liste) '()
      (
       (let head (first liste))
       (let new_head (fonction head))
       (cons new_head (aux (rest liste)))
       )
      )
    )
  (aux liste)
  )
(let liste '(1 2 3))
(let liste_rev (revertir liste))
(let carres (map aux liste_rev))
(print carres)
